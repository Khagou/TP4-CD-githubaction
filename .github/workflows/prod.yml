name: Pipeline prod-env

on:
  push:
    branches:
      - prod

env:
  # Use docker.io for Docker Hub if empty
  SHA: ${{ github.event.pull_request.head.sha || github.event.after }}

jobs:
  # ###### Deploiement terraform ######
  # ###################################
  # deploiement-terraform:
  #   permissions:
  #     contents: "read"
  #     id-token: "write"
  #   runs-on: ${{ vars.IMAGE_OS }}
  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Setup terraform
  #       uses: hashicorp/setup-terraform@v2

  #     - name: Terraform Init
  #       run: |
  #         cd prod_env
  #         terraform init
  #       env:
  #         GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

  #     - name: Terraform Plan
  #       run: |
  #         cd prod_env
  #         terraform plan -input=false
  #       env:
  #         GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

  #     - name: Terraform Apply
  #       if: github.ref == 'refs/heads/prod' && github.event_name == 'push'
  #       run: |
  #         cd prod_env
  #         terraform apply -auto-approve -input=false
  #       env:
  #         GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

  ###### Deploiement image et service ######
  ##########################################

  Deploiement-image-et-service:
    # needs: [deploiement-terraform]
    permissions:
      contents: "read"
      id-token: "write"
    runs-on: ${{ vars.IMAGE_OS }}
    outputs:
      output1: ${{ steps.instancename.outputs.test }}
    steps:
      - uses: actions/checkout@v3

      - name: Auth to gcloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GOOGLE_CREDENTIALS}}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          version: ">= 363.0.0"
          project_id: ${{ secrets.PROJECT_ID}}

      - name: Configure gcloud
        run: gcloud config set compute/zone europe-west1-b

      # - name: Get instance name
      #   id: instancename
      #   run: GKE_INSTANCE=$(gcloud compute instances list | awk '{print $2}' | grep "gke")

      # - name: Copy files
      #   run: gcloud compute scp --recurse /home/runner/work/TP4-CD-githubaction/TP4-CD-githubaction $GKE_INSTANCE:~

      # - name: Deploy image
      #   run: gcloud compute ssh $GKE_INSTANCE --command="kubectl apply -f ./prod-end/deployment.yml"

      # - name: Creation du service
      #   run: gcloud compute ssh $GKE_INSTANCE --command="kubectl apply -f ./prod-end/service.yml"
      - name: Deployment
        run: |
          ls
          pwd
          ls docker-app
          ls docker-app/python
          gcloud projects add-iam-policy-binding tp4-cd-400812 --member=serviceAccount:1004562053837@cloudbuild.gserviceaccount.com --role=roles/container.developer
          gcloud builds submit --region=europe-west1 --project=tp4-cd-400812 --config ./prod_env/cloudbuild.yml --gcs-log-dir="gs://tp4-tfstate/terraform-env-prod"
