name: Pipeline prod-env

on:
  push:
    branches:
      - prod

env:
  # Use docker.io for Docker Hub if empty
  SHA: ${{ github.event.pull_request.head.sha || github.event.after }}

jobs:
  # ###### Check docker image ######
  # ################################
  # check-docker-image:
  #   runs-on: ${{ vars.IMAGE_OS }}
  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{ secrets.DOCKER_USER }}
  #         password: ${{ secrets.DOCKER_TOKEN }}

  #     - name: Extract Docker metadata
  #       id: meta
  #       uses: docker/metadata-action@v4.4.0
  #       with:
  #         images: ${{ secrets.DOCKER_USER }}/${{ vars.DOCKER_REPO }}
  #         labels: |
  #           org.opencontainers.image.revision=${{ env.SHA }}
  #         tags: |
  #           type=edge,branch=$repo.default_branch
  #           type=semver,pattern=v{{version}}
  #           type=sha,prefix=,suffix=,format=short

  #     - name: Check image
  #       uses: docker/scout-action@v0.18.1
  #       with:
  #         command: cves
  #         image: ${{ secrets.DOCKER_USER }}/${{ vars.DOCKER_REPO }}:${{ vars.DOCKER_IMAGE_VERSION }}
  #         exit-code: true
  #         # token: ${{ secrets.DOCKER_TOKEN }}

  # ##### Push img to GAR ######
  # ############################
  # push-docker-image-to-GAR:
  #   needs: [check-docker-image]
  #   runs-on: ${{ vars.IMAGE_OS }}
  #   permissions:
  #     contents: "read"
  #     id-token: "write"

  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: "Google auth"
  #       id: "auth"
  #       uses: "google-github-actions/auth@v1"
  #       with:
  #         credentials_json: ${{ secrets.GOOGLE_CREDENTIALS }}

  #     - name: "Build and push"
  #       uses: RafikFarhad/push-to-gcr-github-action@v5-beta
  #       with:
  #         registry: europe-west1-docker.pkg.dev
  #         project_id: ${{ vars.GCP_PROJECT }}/docker-repo
  #         image_name: tp4-cd
  #         image_tag: 1
  #         dockerfile: ./docker-app/python/Dockerfile
  #         context: ./

  ##### Deploiement image et service ######
  #########################################

  Deploiement-image-et-service:
    # needs: [push-docker-image-to-GAR]
    permissions:
      contents: "read"
      id-token: "write"
    runs-on: ${{ vars.IMAGE_OS }}

    steps:
      - uses: actions/checkout@v3

      - name: Auth to gcloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GOOGLE_CREDENTIALS}}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          version: ">= 363.0.0"
          project_id: ${{ secrets.PROJECT_ID}}

      - name: Configure gcloud
        run: gcloud config set compute/zone europe-west1-b

      - name: Get GKE
        uses: google-github-actions/get-gke-credentials@v1
        with:
          cluster_name: "deployment-cluster"
          location: "europe-west1-b"
          credentials: ${{ secrets.GOOGLE_CREDENTIALS }}

      # Set up kustomize
      - name: Set up Kustomize
        run: |-
          curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
          chmod u+x ./kustomize

      # Deploy the Docker image to the GKE cluster
      - name: Deploy
        run: |-
          ./kustomize edit set image europe-west1-docker.pkg.dev/tp4-cd-403915/docker-repo/tp4-cd:latest
          ./kustomize build . | kubectl apply -f -
          kubectl rollout status deployment/demo-app
          kubectl get services -o wide

      # - name: Deployment
      #   run: |
      #     ls
      #     pwd
      #     kubectl create deployment demo-app --image=europe-west1-docker.pkg.dev/tp4-cd-403915/docker-repo/tp4-cd:1
