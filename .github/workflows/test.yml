name: Pipeline test-env

on:
  push:
    branches:
      - test

env:
  # Use docker.io for Docker Hub if empty
  SHA: ${{ github.event.pull_request.head.sha || github.event.after }}

jobs:
  # ###### Check docker image ######
  # ################################
  # check-docker-image:
  #   runs-on: ${{ vars.IMAGE_OS }}
  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{ secrets.DOCKER_USER }}
  #         password: ${{ secrets.DOCKER_TOKEN }}

  #     - name: Extract Docker metadata
  #       id: meta
  #       uses: docker/metadata-action@v4.4.0
  #       with:
  #         images: ${{ secrets.DOCKER_USER }}/${{ vars.DOCKER_REPO }}
  #         labels: |
  #           org.opencontainers.image.revision=${{ env.SHA }}
  #         tags: |
  #           type=edge,branch=$repo.default_branch
  #           type=semver,pattern=v{{version}}
  #           type=sha,prefix=,suffix=,format=short

  #     - name: Check image
  #       uses: docker/scout-action@v0.18.1
  #       with:
  #         command: cves
  #         image: ${{ secrets.DOCKER_USER }}/${{ vars.DOCKER_REPO }}:${{ vars.DOCKER_IMAGE_VERSION }}
  #         exit-code: true

  ###### Deploiement terraform ######
  ###################################
  deploiement-terraform:
    # needs: [push-docker-image-to-GAR]
    permissions:
      contents: "read"
      id-token: "write"
    runs-on: ${{ vars.IMAGE_OS }}

    steps:
      - uses: actions/checkout@v3

      - name: Setup terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: |
          cd test_env
          terraform init
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: Test PWD
        run: |
          pwd

      - name: Terraform Plan
        run: |
          cd test_env
          terraform plan -input=false -var private_key="${{ secrets.PRIVATE_KEY }}"
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: Terraform Apply
        if: github.ref == 'refs/heads/test' && github.event_name == 'push'
        run: |
          cd test_env
          terraform apply -auto-approve -input=false -var private_key="${{ secrets.PRIVATE_KEY }}"
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
